{"ast":null,"code":"var _jsxFileName = \"D:\\\\Nikhil\\\\react-http-project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [planetList, setPlanetList] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  async function getMovies() {\n    setIsLoading(true);\n    const response = await fetch('https://swapi.dev/api/films/');\n    const data = await response.json();\n    // eslint-disable-next-line no-unused-expressions\n    const selectedData = data.results.map(movieData => {\n      return {\n        id: movieData.episode_id,\n        title: movieData.title,\n        release_date: movieData.release_date,\n        opening_crawl: movieData.opening_crawl\n      };\n    });\n    setPlanetList(selectedData);\n    setIsLoading(false);\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getMovies,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [!isLoading && planetList.length > 0 && /*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: planetList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 49\n      }, this), !isLoading && planetList.length === 0 && \"Movie Not Found\", isLoading && \"Loading ... \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"NQzd2aswd45npFdTbHOksbKfFQc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MoviesList","jsxDEV","_jsxDEV","App","_s","planetList","setPlanetList","isLoading","setIsLoading","getMovies","response","fetch","data","json","selectedData","results","map","movieData","id","episode_id","title","release_date","opening_crawl","Fragment","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","length","movies","_c","$RefreshReg$"],"sources":["D:/Nikhil/react-http-project/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n \n  const[planetList,setPlanetList]=useState([]);\n  const[isLoading,setIsLoading]=useState(false);\n\n\n  async function getMovies(){\n    setIsLoading(true);\n           const response=await fetch('https://swapi.dev/api/films/');\n           const data=await response.json(); \n                 // eslint-disable-next-line no-unused-expressions\n                 const selectedData=data.results.map(movieData=>{\n                 return{\n                  id:movieData.episode_id, \n                  title:movieData.title,\n                  release_date:movieData.release_date,\n                  opening_crawl:movieData.opening_crawl\n                 }\n                 }) \n                 setPlanetList(selectedData);\n                 setIsLoading(false);\n          \n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={getMovies}>Fetch Movies</button>\n      </section>\n      <section>\n        {!isLoading && planetList.length > 0 && <MoviesList movies={planetList} />}\n        {!isLoading && planetList.length === 0 && \"Movie Not Found\" }\n        {isLoading &&  \"Loading ... \" }\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAK,CAACC,UAAU,EAACC,aAAa,CAAC,GAACP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAK,CAACQ,SAAS,EAACC,YAAY,CAAC,GAACT,QAAQ,CAAC,KAAK,CAAC;EAG7C,eAAeU,SAASA,CAAA,EAAE;IACxBD,YAAY,CAAC,IAAI,CAAC;IACX,MAAME,QAAQ,GAAC,MAAMC,KAAK,CAAC,8BAA8B,CAAC;IAC1D,MAAMC,IAAI,GAAC,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAC1B;IACA,MAAMC,YAAY,GAACF,IAAI,CAACG,OAAO,CAACC,GAAG,CAACC,SAAS,IAAE;MAC/C,OAAM;QACLC,EAAE,EAACD,SAAS,CAACE,UAAU;QACvBC,KAAK,EAACH,SAAS,CAACG,KAAK;QACrBC,YAAY,EAACJ,SAAS,CAACI,YAAY;QACnCC,aAAa,EAACL,SAAS,CAACK;MACzB,CAAC;IACD,CAAC,CAAC;IACFhB,aAAa,CAACQ,YAAY,CAAC;IAC3BN,YAAY,CAAC,KAAK,CAAC;EAElC;EAEA,oBACEN,OAAA,CAACJ,KAAK,CAACyB,QAAQ;IAAAC,QAAA,gBACbtB,OAAA;MAAAsB,QAAA,eACEtB,OAAA;QAAQuB,OAAO,EAAEhB,SAAU;QAAAe,QAAA,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC,eACV3B,OAAA;MAAAsB,QAAA,GACG,CAACjB,SAAS,IAAIF,UAAU,CAACyB,MAAM,GAAG,CAAC,iBAAI5B,OAAA,CAACF,UAAU;QAAC+B,MAAM,EAAE1B;MAAW;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACzE,CAACtB,SAAS,IAAIF,UAAU,CAACyB,MAAM,KAAK,CAAC,IAAI,iBAAiB,EAC1DvB,SAAS,IAAK,cAAc;IAAA;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAErB;AAACzB,EAAA,CApCQD,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AAsCZ,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}