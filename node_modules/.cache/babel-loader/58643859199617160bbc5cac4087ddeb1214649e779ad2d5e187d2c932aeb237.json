{"ast":null,"code":"var _jsxFileName = \"D:\\\\Nikhil\\\\react-http-project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport MoviesList from \"./components/MoviesList\";\nimport AddMovie from \"./components/AddMovie\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [planetList, setPlanetList] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const getMovies = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\"https://react-http-project-aedbc-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json\");\n      if (!response.ok) {\n        throw new Error(\"Something went wrong !\");\n      }\n      const data = await response.json();\n      console.log(\"ðŸš€ ~ getMovies ~ data:\", data);\n\n      // eslint-disable-next-line no-unused-expressions\n      const selectedData = data.results.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          release_date: movieData.release_date,\n          opening_crawl: movieData.opening_crawl\n        };\n      });\n      setPlanetList(selectedData);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  }, []);\n  useEffect(() => {\n    getMovies();\n  }, [getMovies]);\n  async function addMovieHandler(movie) {\n    const response = await fetch(\"https://react-http-project-aedbc-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json\", {\n      method: 'POST',\n      body: JSON.stringify(movie),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await response.json();\n    console.log(\"ðŸš€ ~ addMovieHandler ~ data:\", data);\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(AddMovie, {\n        onAddMovie: addMovieHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getMovies,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [!isLoading && planetList.length > 0 && /*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: planetList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), !isLoading && planetList.length === 0 && \"Movie Not Found\", !isLoading && error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 33\n      }, this), isLoading && \"Loading ... \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"IUAjv/3f9GBmPOgzX92F1K8WALY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","MoviesList","AddMovie","jsxDEV","_jsxDEV","App","_s","planetList","setPlanetList","isLoading","setIsLoading","error","setError","getMovies","response","fetch","ok","Error","data","json","console","log","selectedData","results","map","movieData","id","episode_id","title","release_date","opening_crawl","message","addMovieHandler","movie","method","body","JSON","stringify","headers","Fragment","children","onAddMovie","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","movies","_c","$RefreshReg$"],"sources":["D:/Nikhil/react-http-project/src/App.js"],"sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport AddMovie from \"./components/AddMovie\";\nimport \"./App.css\";\n\nfunction App() {\n  const [planetList, setPlanetList] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n\n  const getMovies=useCallback(async()=>{\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\"https://react-http-project-aedbc-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json\");\n      if (!response.ok) {\n        throw new Error(\"Something went wrong !\");\n      }\n\n      const data = await response.json();\n      console.log(\"ðŸš€ ~ getMovies ~ data:\", data);\n      \n      // eslint-disable-next-line no-unused-expressions\n      const selectedData = data.results.map((movieData) => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          release_date: movieData.release_date,\n          opening_crawl: movieData.opening_crawl,\n        };\n      });\n      setPlanetList(selectedData);\n    } catch(error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  },[]);\n\n  useEffect(()=>{\n    getMovies();\n },[getMovies]);\n\n async function addMovieHandler(movie) {\n  const response=await fetch(\"https://react-http-project-aedbc-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json\",{\n    method:'POST',\n    body:JSON.stringify(movie),\n    headers:{\n      'Content-Type':'application/json'\n    }\n  });\n\n  const data= await response.json();\n  console.log(\"ðŸš€ ~ addMovieHandler ~ data:\", data);\n  \n}\n\n  return (\n    <React.Fragment>\n      <section>\n        <AddMovie onAddMovie={addMovieHandler} />\n      </section>\n      <section>\n        <button onClick={getMovies}>Fetch Movies</button>\n      </section>\n      <section>\n        {!isLoading && planetList.length > 0 && (\n          <MoviesList movies={planetList} />\n        )}\n        {!isLoading && planetList.length === 0 && \"Movie Not Found\"}\n        {!isLoading && error && <p>{error}</p>}\n        {isLoading && \"Loading ... \"}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}