{"ast":null,"code":"var _jsxFileName = \"D:\\\\Nikhil\\\\react-http-project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport MoviesList from \"./components/MoviesList\";\nimport AddMovie from \"./components/AddMovie\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [planetList, setPlanetList] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const getMovies = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\"https://react-http-project-aedbc-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json\");\n      if (!response.ok) {\n        throw new Error(\"Something went wrong !\");\n      }\n      const data = await response.json();\n      const loadMovies = [];\n      for (const key in data) {\n        loadMovies.push({\n          id: key,\n          title: data[key].title,\n          openingText: data[key].openingText,\n          releasedate: data[key].releasedate\n        });\n      }\n      console.log(\"ðŸš€ ~ getMovies ~ data:\", data);\n\n      // eslint-disable-next-line no-unused-expressions\n      const selectedData = loadMovies.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          release_date: movieData.release_date,\n          opening_crawl: movieData.opening_crawl\n        };\n      });\n      setPlanetList(selectedData);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  }, []);\n  useEffect(() => {\n    getMovies();\n  }, [getMovies]);\n  async function addMovieHandler(movie) {\n    const response = await fetch(\"https://react-http-project-aedbc-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json\", {\n      method: 'POST',\n      body: JSON.stringify(movie),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await response.json();\n    console.log(\"ðŸš€ ~ addMovieHandler ~ data:\", data);\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(AddMovie, {\n        onAddMovie: addMovieHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getMovies,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [!isLoading && planetList.length > 0 && /*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: planetList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), !isLoading && planetList.length === 0 && \"Movie Not Found\", !isLoading && error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 33\n      }, this), isLoading && \"Loading ... \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"IUAjv/3f9GBmPOgzX92F1K8WALY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","MoviesList","AddMovie","jsxDEV","_jsxDEV","App","_s","planetList","setPlanetList","isLoading","setIsLoading","error","setError","getMovies","response","fetch","ok","Error","data","json","loadMovies","key","push","id","title","openingText","releasedate","console","log","selectedData","map","movieData","episode_id","release_date","opening_crawl","message","addMovieHandler","movie","method","body","JSON","stringify","headers","Fragment","children","onAddMovie","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","movies","_c","$RefreshReg$"],"sources":["D:/Nikhil/react-http-project/src/App.js"],"sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport AddMovie from \"./components/AddMovie\";\nimport \"./App.css\";\n\nfunction App() {\n  const [planetList, setPlanetList] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n\n  const getMovies=useCallback(async()=>{\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\"https://react-http-project-aedbc-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json\");\n      if (!response.ok) {\n        throw new Error(\"Something went wrong !\");\n      }\n\n      const data = await response.json();\n      const loadMovies=[];\n      for(const key in data){\n             loadMovies.push({\n              id:key,\n              title:data[key].title,\n              openingText:data[key].openingText,\n              releasedate:data[key].releasedate,\n\n             })\n      }\n\n      console.log(\"ðŸš€ ~ getMovies ~ data:\", data);\n      \n      // eslint-disable-next-line no-unused-expressions\n      const selectedData = loadMovies.map((movieData) => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          release_date: movieData.release_date,\n          opening_crawl: movieData.opening_crawl,\n        };\n      });\n      setPlanetList(selectedData);\n    } catch(error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  },[]);\n\n  useEffect(()=>{\n    getMovies();\n },[getMovies]);\n\n async function addMovieHandler(movie) {\n  const response=await fetch(\"https://react-http-project-aedbc-default-rtdb.asia-southeast1.firebasedatabase.app/movies.json\",{\n    method:'POST',\n    body:JSON.stringify(movie),\n    headers:{\n      'Content-Type':'application/json'\n    }\n  });\n\n  const data= await response.json();\n  console.log(\"ðŸš€ ~ addMovieHandler ~ data:\", data);\n  \n}\n\n  return (\n    <React.Fragment>\n      <section>\n        <AddMovie onAddMovie={addMovieHandler} />\n      </section>\n      <section>\n        <button onClick={getMovies}>Fetch Movies</button>\n      </section>\n      <section>\n        {!isLoading && planetList.length > 0 && (\n          <MoviesList movies={planetList} />\n        )}\n        {!isLoading && planetList.length === 0 && \"Movie Not Found\"}\n        {!isLoading && error && <p>{error}</p>}\n        {isLoading && \"Loading ... \"}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE/D,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAGxC,MAAMa,SAAS,GAACf,WAAW,CAAC,YAAS;IACnCY,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,gGAAgG,CAAC;MAC9H,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;MAC3C;MAEA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClC,MAAMC,UAAU,GAAC,EAAE;MACnB,KAAI,MAAMC,GAAG,IAAIH,IAAI,EAAC;QACfE,UAAU,CAACE,IAAI,CAAC;UACfC,EAAE,EAACF,GAAG;UACNG,KAAK,EAACN,IAAI,CAACG,GAAG,CAAC,CAACG,KAAK;UACrBC,WAAW,EAACP,IAAI,CAACG,GAAG,CAAC,CAACI,WAAW;UACjCC,WAAW,EAACR,IAAI,CAACG,GAAG,CAAC,CAACK;QAEvB,CAAC,CAAC;MACT;MAEAC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEV,IAAI,CAAC;;MAE3C;MACA,MAAMW,YAAY,GAAGT,UAAU,CAACU,GAAG,CAAEC,SAAS,IAAK;QACjD,OAAO;UACLR,EAAE,EAAEQ,SAAS,CAACC,UAAU;UACxBR,KAAK,EAAEO,SAAS,CAACP,KAAK;UACtBS,YAAY,EAAEF,SAAS,CAACE,YAAY;UACpCC,aAAa,EAAEH,SAAS,CAACG;QAC3B,CAAC;MACH,CAAC,CAAC;MACF1B,aAAa,CAACqB,YAAY,CAAC;IAC7B,CAAC,CAAC,OAAMlB,KAAK,EAAE;MACbC,QAAQ,CAACD,KAAK,CAACwB,OAAO,CAAC;IACzB;IACAzB,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC,EAAC,EAAE,CAAC;EAELX,SAAS,CAAC,MAAI;IACZc,SAAS,CAAC,CAAC;EACd,CAAC,EAAC,CAACA,SAAS,CAAC,CAAC;EAEd,eAAeuB,eAAeA,CAACC,KAAK,EAAE;IACrC,MAAMvB,QAAQ,GAAC,MAAMC,KAAK,CAAC,gGAAgG,EAAC;MAC1HuB,MAAM,EAAC,MAAM;MACbC,IAAI,EAACC,IAAI,CAACC,SAAS,CAACJ,KAAK,CAAC;MAC1BK,OAAO,EAAC;QACN,cAAc,EAAC;MACjB;IACF,CAAC,CAAC;IAEF,MAAMxB,IAAI,GAAE,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IACjCQ,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEV,IAAI,CAAC;EAEnD;EAEE,oBACEd,OAAA,CAACP,KAAK,CAAC8C,QAAQ;IAAAC,QAAA,gBACbxC,OAAA;MAAAwC,QAAA,eACExC,OAAA,CAACF,QAAQ;QAAC2C,UAAU,EAAET;MAAgB;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eACV7C,OAAA;MAAAwC,QAAA,eACExC,OAAA;QAAQ8C,OAAO,EAAErC,SAAU;QAAA+B,QAAA,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC,eACV7C,OAAA;MAAAwC,QAAA,GACG,CAACnC,SAAS,IAAIF,UAAU,CAAC4C,MAAM,GAAG,CAAC,iBAClC/C,OAAA,CAACH,UAAU;QAACmD,MAAM,EAAE7C;MAAW;QAAAuC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAClC,EACA,CAACxC,SAAS,IAAIF,UAAU,CAAC4C,MAAM,KAAK,CAAC,IAAI,iBAAiB,EAC1D,CAAC1C,SAAS,IAAIE,KAAK,iBAAIP,OAAA;QAAAwC,QAAA,EAAIjC;MAAK;QAAAmC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACrCxC,SAAS,IAAI,cAAc;IAAA;MAAAqC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAErB;AAAC3C,EAAA,CAjFQD,GAAG;AAAAgD,EAAA,GAAHhD,GAAG;AAmFZ,eAAeA,GAAG;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}